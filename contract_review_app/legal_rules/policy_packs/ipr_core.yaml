rule:
  id: ipr.agreement_docs_title.company
  version: 1.0.0
  title: "Agreement Documentation title vests in Company"
  law_reference:
    - "Copyright assignment must be in writing (CDPA 1988 s.90)."
  severity: low
  triggers:
    any:
      - regex: "(?i)agreement documentation"
  checks:
    - id: title_vests_company
      when:
        regex: "(?i)(title|ownership).*agreement documentation.*(company)"
      finding:
        message: "Title to the Agreement Documentation is vested in the Company."
        severity_level: low
        risk: "No risk: title is with the Company."
        suggestion:
          text: "—"
    - id: title_retained_contractor
      when:
        regex: '(?i)title.*(remain|retained).*contractor|assigned\s+later'
      finding:
        message: "Title to the Agreement Documentation remains with the Contractor or is assigned later."
        severity_level: high
        risk: "The Company may not obtain rights to the documentation."
        suggestion:
          text: "Provide for an immediate transfer of rights to the documentation to the Company."
  outcome:
    status: pass
    risk_level: low
    severity: low
    problem: ""
    recommendation: ""
  metadata:
    tags: ["ipr","documentation","title","company"]
---
rule:
  id: ipr.fg.licence.scope
  version: 1.0.0
  title: "Foreground IPR licence to Company — broad grant"
  law_reference:
    - "Company must be able to modify and own modifications."
  severity: high
  triggers:
    any:
      - regex: '(?i)foreground\s+(intellectual\s+property|ipr)'
  checks:
    - id: fg_full_scope
      when:
        all:
          - regex: '(?i)worldwide'
          - regex: '(?i)royalty-free'
          - regex: '(?i)perpetual'
          - regex: '(?i)irrevocable'
          - regex: '(?i)transferable'
          - regex: '(?i)sub-?licen(c|s)able'
          - regex: '(?i)\bmodify\b'
          - regex: '(?i)modifications?\s+shall\s+vest\s+in\s+company'
      finding:
        message: "Broad FG IPR licence in favour of the Company is present."
        severity_level: low
        risk: "—"
        suggestion:
          text: "—"
    - id: fg_missing_scope
      when:
        any:
          - not_regex: "(?i)worldwide"
          - not_regex: '(?i)royalty-free'
          - not_regex: "(?i)perpetual"
          - not_regex: "(?i)irrevocable"
          - not_regex: "(?i)transferable"
          - not_regex: "(?i)sub-?licen(c|s)able"
          - not_regex: '(?i)\bmodify\b'
          - not_regex: '(?i)modifications?\s+shall\s+vest\s+in\s+company'
      finding:
        message: "The FG IPR licence does not cover all key rights."
        severity_level: high
        risk: "The Company may not receive full rights to the FG IPR."
        suggestion:
          text: "Add worldwide, royalty-free, perpetual, irrevocable, transferable, sublicensable, the right to modify, and vesting of modifications."
  outcome:
    status: fail
    risk_level: high
    severity: high
    problem: "FG licence scope is incomplete."
    recommendation: "Expand the FG IPR licence."
  metadata:
    tags: ["ipr","foreground","licence","scope"]
---
rule:
  id: ipr.bg.licence.conflict
  version: 1.0.0
  title: "Background IPR licence — detect term conflict"
  law_reference:
    - "Consistency & enforceability of licence terms (UK contract law)."
  severity: high
  triggers:
    any:
      - regex: '(?i)background\s+(intellectual\s+property|ipr)'
  checks:
    - id: bg_term_conflict
      when:
        all:
          - regex: "(?i)perpetual|irrevocable"
          - regex: '(?i)only\s+for\s+the\s+duration\s+of\s+the\s+(agreement|call-?off)'
      finding:
        message: "BG licence term conflict: perpetual/irrevocable vs only for the duration."
        severity_level: high
        risk: "Internal inconsistency in the licence terms."
        suggestion:
          text: "Choose a single term model and remove the conflict."
  outcome:
    status: fail
    risk_level: high
    severity: high
    problem: "BG licence term conflict."
    recommendation: "Agree on a single formulation for the BG licence term."
  metadata:
    tags: ["ipr","background","licence","conflict","term"]
---
rule:
  id: ipr.moral_rights.waiver
  version: 1.0.0
  title: "Moral rights — unconditional & irrevocable waivers"
  law_reference:
    - "CDPA 1988 s.87 allows waiver of moral rights."
  severity: high
  triggers:
    any:
      - regex: '(?i)moral\s+rights'
  checks:
    - id: moral_rights_missing_waiver
      when:
        not_regex: '(?i)irrevocably\s+and\s+unconditionally\s+waive(s)?\s+all\s+moral\s+rights'
      finding:
        message: "No unconditional waiver of moral rights."
        severity_level: high
        risk: "An author may obstruct use of the work."
        suggestion:
          text: "Insert an unconditional and irrevocable waiver of all moral rights."
  outcome:
    status: fail
    risk_level: high
    severity: high
    problem: "No moral rights waiver."
    recommendation: "Add a waiver from all authors/performers."
  metadata:
    tags: ["ipr","moral rights","waiver"]
---
rule:
  id: ipr.indemnity.remedies
  version: 1.0.0
  title: "IPR indemnity with procure/replace/modify remedies"
  law_reference:
    - "Indemnifying party must ensure equivalent performance with no extra cost."
  severity: high
  triggers:
    any:
      - regex: '(?i)intellectual\s+property'
      - regex: "(?i)ipr"
  checks:
    - id: indemnity_missing_conditions
      when:
        any:
          - not_regex: "(?i)procure"
          - not_regex: "(?i)replace"
          - not_regex: "(?i)modify"
          - not_regex: '(?i)equivalent\s+performance'
          - not_regex: '(?i)no\s+additional\s+cost'
          - not_regex: '(?i)no\s+adverse\s+impact'
          - not_regex: '(?i)subject\s+to\s+(this|the)\s+agreement'
      finding:
        message: "IPR indemnity/remedies terms are incomplete."
        severity_level: high
        risk: "The Company may be left without an equivalent remedy and incur costs."
        suggestion:
          text: "Add: procure a licence, replace or modify with equivalent performance, at no additional cost, without adverse impact, and subject to this Agreement."
  outcome:
    status: fail
    risk_level: high
    severity: high
    problem: "IPR indemnity lacks full remedies."
    recommendation: "Expand the list of remedial terms."
  metadata:
    tags: ["ipr","indemnity","remedies"]
---
rule:
  id: ipr.brand.use.prohibition
  version: 1.0.0
  title: "Brand use prohibition"
  law_reference:
    - "Trade mark use requires prior consent."
  severity: high
  triggers:
    any:
      - regex: '(?i)company(?:''s)?\s+(name|logo|brand|trademark)'
  checks:
    - id: brand_use_allowed
      when:
        all:
          - regex: '(?i)may\s+use.*company(?:''s)?\s+(name|logo|brand|trademark)'
          - not_regex: '(?i)prior\s+written\s+consent'
      finding:
        message: "Permission to use the Company's brand is granted by default."
        severity_level: high
        risk: "Unwanted use of the Company's name or logos."
        suggestion:
          text: "Prohibit brand use without the Company's prior written consent."
  outcome:
    status: fail
    risk_level: high
    severity: high
    problem: "Brand use allowed by default."
    recommendation: "Add a prohibition on use without written consent."
  metadata:
    tags: ["ipr","brand","consent"]
---
rule:
  id: ipr.supplied_software.definition
  version: 1.0.0
  title: "Supplied Software — comprehensive definition"
  law_reference:
    - "Software supply should cover all components."
  severity: medium
  triggers:
    any:
      - regex: '(?i)supplied\s+software'
  checks:
    - id: supplied_software_incomplete
      when:
        any:
          - not_regex: '(?i)embedded\s+firmware'
          - not_regex: '(?i)activation\s+keys'
          - not_regex: '(?i)test\s+scripts'
          - not_regex: "(?i)patches|updates"
          - not_regex: "(?i)manuals"
      finding:
        message: "Definition of Supplied Software is incomplete."
        severity_level: medium
        risk: "Some components may be excluded."
        suggestion:
          text: "Clarify that Supplied Software includes firmware, activation keys, test scripts, patches/updates, and manuals."
  outcome:
    status: warn
    risk_level: medium
    severity: medium
    problem: "Definition of Supplied Software incomplete."
    recommendation: "Add the missing elements."
  metadata:
    tags: ["ipr","software","definition"]
---
rule:
  id: ipr.further_assurances.poa
  version: 1.0.0
  title: "Further assurances and irrevocable PoA"
  law_reference:
    - "Further assurances clauses secure assignment validity."
  severity: medium
  triggers:
    any:
      - regex: '(?i)intellectual\s+property|ipr'
  checks:
    - id: missing_further_assurances
      when:
        not_regex: '(?i)further\s+assurances|power\s+of\s+attorney'
      finding:
        message: "No obligation to sign documents/PoA to perfect rights."
        severity_level: medium
        risk: "The Company may encounter obstacles when perfecting rights."
        suggestion:
          text: "Add an obligation to sign documents and an irrevocable PoA in favour of the Company."
  outcome:
    status: warn
    risk_level: medium
    severity: medium
    problem: "No further assurances/PoA."
    recommendation: "Insert a clause on further assurances and an irrevocable PoA."
  metadata:
    tags: ["ipr","assurances","poa"]
---
rule:
  id: ipr.oss.guardrails
  version: 1.0.0
  title: "Open-source guardrails (SBOM/copyleft)"
  law_reference:
    - "OSS components require policy compliance and SBOM."
  severity: medium
  triggers:
    any:
      - regex: "(?i)software"
  checks:
    - id: oss_missing_controls
      when:
        not_regex: '(?i)open\s*source|OSS|software\s+bill\s+of\s+materials|SBOM|copyleft'
      finding:
        message: "No OSS policy/SBOM/copyleft restriction."
        severity_level: medium
        risk: "Possible OSS licence violations and copyleft contamination."
        suggestion:
          text: "Add an OSS usage policy, an SBOM requirement, and a prohibition on copyleft contamination."
  outcome:
    status: warn
    risk_level: medium
    severity: medium
    problem: "No OSS guardrails."
    recommendation: "Add OSS and SBOM requirements."
  metadata:
    tags: ["ipr","oss","sbom"]
---
rule:
  id: ipr.source_code.escrow
  version: 1.0.0
  title: "Source code escrow for critical software"
  law_reference:
    - "Escrow ensures access if supplier fails."
  severity: medium
  triggers:
    any:
      - regex: '(?i)source\s+code'
  checks:
    - id: escrow_missing
      when:
        not_regex: "(?i)escrow"
      finding:
        message: "No provision for depositing source code (escrow)."
        severity_level: medium
        risk: "The Company risks losing access to critical software."
        suggestion:
          text: "Provide for source code escrow with release events such as bankruptcy, refusal to support, or breach."
  outcome:
    status: warn
    risk_level: medium
    severity: medium
    problem: "No source code escrow."
    recommendation: "Add escrow with release events."
  metadata:
    tags: ["ipr","escrow","source code"]
