{
  "version": 3,
  "sources": ["../../word_addin_dev/app/assets/store.ts", "../../word_addin_dev/app/assets/api-client.ts", "../../word_addin_dev/app/assets/dedupe.ts", "../../word_addin_dev/app/assets/notifier.ts", "../../word_addin_dev/app/assets/office.ts", "../../word_addin_dev/app/assets/taskpane.ts"],
  "sourcesContent": ["const DEFAULT_API_KEY = \"\";\r\nexport const DEFAULT_SCHEMA = \"1.4\";\r\nconst ADD_COMMENTS_KEY = \"cai-comment-on-analyze\";\r\n\r\nfunction ensureDefaults(): void {\r\n  try {\r\n    if (localStorage.getItem(\"api_key\") === null) {\r\n      localStorage.setItem(\"api_key\", DEFAULT_API_KEY);\r\n    }\r\n    if (localStorage.getItem(\"schema_version\") === null) {\r\n      localStorage.setItem(\"schema_version\", DEFAULT_SCHEMA);\r\n    }\r\n    if (localStorage.getItem(ADD_COMMENTS_KEY) === null) {\r\n      localStorage.setItem(ADD_COMMENTS_KEY, \"1\");\r\n    }\r\n  } catch {\r\n    // ignore\r\n  }\r\n}\r\n\r\nensureDefaults();\r\n\r\nexport function getApiKeyFromStore(): string {\r\n  try {\r\n    return localStorage.getItem(\"api_key\") || DEFAULT_API_KEY;\r\n  } catch {\r\n    return DEFAULT_API_KEY;\r\n  }\r\n}\r\n\r\nexport function setApiKey(k: string): void {\r\n  try {\r\n    localStorage.setItem(\"api_key\", k);\r\n  } catch {\r\n    // ignore\r\n  }\r\n}\r\n\r\nexport function getSchemaFromStore(): string {\r\n  try {\r\n    return localStorage.getItem(\"schema_version\") || DEFAULT_SCHEMA;\r\n  } catch {\r\n    return DEFAULT_SCHEMA;\r\n  }\r\n}\r\n\r\nexport function setSchemaVersion(v: string): void {\r\n  try {\r\n    localStorage.setItem(\"schema_version\", v);\r\n  } catch {\r\n    // ignore\r\n  }\r\n}\r\n\r\nexport function getAddCommentsFlag(): boolean {\r\n  try {\r\n    const v = localStorage.getItem(ADD_COMMENTS_KEY);\r\n    if (v === null) {\r\n      localStorage.setItem(ADD_COMMENTS_KEY, \"1\");\r\n      return true;\r\n    }\r\n    return v !== \"0\";\r\n  } catch {\r\n    return true;\r\n  }\r\n}\r\n\r\nexport function setAddCommentsFlag(v: boolean): void {\r\n  try {\r\n    localStorage.setItem(ADD_COMMENTS_KEY, v ? \"1\" : \"0\");\r\n  } catch {\r\n    // ignore\r\n  }\r\n}\r\n\r\n// expose minimal CAI.Store for legacy consumers\r\nconst root: any = typeof globalThis !== \"undefined\" ? (globalThis as any) : (window as any);\r\nroot.CAI = root.CAI || {};\r\nroot.CAI.Store = root.CAI.Store || {};\r\nroot.CAI.Store.setApiKey = setApiKey;\r\nroot.CAI.Store.setSchemaVersion = setSchemaVersion;\r\nroot.CAI.Store.get = () => ({ apiKey: getApiKeyFromStore(), schemaVersion: getSchemaFromStore() });\r\nroot.CAI.Store.DEFAULT_BASE = root.CAI.Store.DEFAULT_BASE || \"https://localhost:9443\";\r\n", "export type Meta = {\r\n  cid?: string | null;\r\n  xcache?: string | null;\r\n  latencyMs?: string | null;\r\n  schema?: string | null;\r\n  provider?: string | null;\r\n  model?: string | null;\r\n  llm_mode?: string | null;\r\n  usage?: string | null;\r\n  status?: string | null;\r\n};\r\n\r\nimport { getApiKeyFromStore, getSchemaFromStore } from \"./store\";\r\n\r\nexport type AnalyzeFinding = {\r\n  rule_id: string;\r\n  clause_type?: string;\r\n  severity?: \"low\" | \"medium\" | \"high\" | \"critical\" | string;\r\n  start?: number;\r\n  end?: number;\r\n  snippet?: string;\r\n  normalized_snippet?: string;\r\n  advice?: string;\r\n  law_refs?: string[];\r\n  law_reference?: string; // legacy\r\n  citations?: string[];\r\n  conflict_with?: string[];\r\n  category?: string;\r\n  score?: number;\r\n  suggestion?: { text?: string };\r\n  ops?: { start?: number; end?: number; replacement?: string }[];\r\n  scope?: { unit?: string; nth?: number };\r\n  occurrences?: number;\r\n};\r\n\r\nexport type AnalyzeResponse = {\r\n  status: \"ok\" | \"OK\";\r\n  analysis?: { findings?: AnalyzeFinding[] };\r\n  findings?: AnalyzeFinding[];\r\n  issues?: AnalyzeFinding[];\r\n  meta?: any;\r\n};\r\n\r\nexport function parseFindings(resp: AnalyzeResponse): AnalyzeFinding[] {\r\n  const arr = resp?.analysis?.findings ?? resp?.findings ?? resp?.issues ?? [];\r\n  return Array.isArray(arr) ? arr.filter(Boolean) : [];\r\n}\r\n\r\n// (dev aid; harmless in prod)\r\n;(window as any).parseFindings = parseFindings;\r\n\r\nexport function metaFromResponse(r: { headers: Headers; json?: any; status?: number }): Meta {\r\n  const h = r.headers;\r\n  const js = r.json || {};\r\n  const llm = js.llm || js;\r\n  return {\r\n    cid:       h.get('x-cid'),\r\n    xcache:    h.get('x-cache'),\r\n    latencyMs: h.get('x-latency-ms'),\r\n    schema:    h.get('x-schema-version'),\r\n    provider:  h.get('x-provider') || llm.provider || js.provider || null,\r\n    model:     h.get('x-model') || llm.model || js.model || null,\r\n    llm_mode:  h.get('x-llm-mode') || llm.mode || js.mode || null,\r\n    usage:     h.get('x-usage-total'),\r\n    status:    r.status != null ? String(r.status) : null,\r\n  };\r\n}\r\n\r\nexport function applyMetaToBadges(m: Meta) {\r\n  const set = (id: string, v?: string | null) => {\r\n    const el = document.getElementById(id);\r\n    if (el) el.textContent = v && v.length ? v : '\u2014';\r\n  };\r\n  set('status',    m.status);\r\n  set('cid',       m.cid);\r\n  set('xcache',    m.xcache);\r\n  set('latency',   m.latencyMs);\r\n  set('schema',    m.schema);\r\n  set('provider',  m.provider);\r\n  set('model',     m.model);\r\n  set('mode',      m.llm_mode);\r\n  set('usage',     m.usage);\r\n}\r\n\r\nconst DEFAULT_BASE = 'https://localhost:9443';\r\nfunction base(): string {\r\n  try { return (localStorage.getItem('backendUrl') || DEFAULT_BASE).replace(/\\/+$/, ''); }\r\n  catch { return DEFAULT_BASE; }\r\n}\r\n\r\nexport async function postJSON(path: string, body: any) {\r\n  const url = base() + path;\r\n  const headers: Record<string, string> = { 'Content-Type': 'application/json' };\r\n  const schema = getSchemaFromStore() || '1.4';\r\n  headers['x-schema-version'] = schema;\r\n  const key = getApiKeyFromStore();\r\n  if (key) headers['x-api-key'] = key;\r\n  const resp = await fetch(url, {\r\n    method: 'POST',\r\n    headers,\r\n    body: JSON.stringify(body || {}),\r\n    credentials: 'include',\r\n  });\r\n  const json = await resp.json().catch(() => ({}));\r\n  return { resp, json };\r\n}\r\nexport { postJSON as postJson };\r\n;(window as any).postJson = postJSON;\r\n\r\nasync function req(path: string, { method='GET', body=null, key=path }: { method?: string; body?: any; key?: string } = {}) {\r\n  const headers: Record<string, string> = { 'Content-Type':'application/json' };\r\n  const apiKey = getApiKeyFromStore();\r\n  if (apiKey) headers['x-api-key'] = apiKey;\r\n  headers['x-schema-version'] = getSchemaFromStore() || '1.4';\r\n\r\n  const r = await fetch(base()+path, {\r\n    method,\r\n    headers,\r\n    body: body ? JSON.stringify(body) : undefined,\r\n    credentials: 'include'\r\n  });\r\n  const json = await r.json().catch(() => ({}));\r\n  const meta = metaFromResponse({ headers: r.headers, json, status: r.status });\r\n  try { applyMetaToBadges(meta); } catch {}\r\n  try {\r\n    const w = window as any;\r\n    if (!w.__last) w.__last = {};\r\n    w.__last[key] = { status: r.status, req: { path, method, body }, json };\r\n  } catch {}\r\n  return { ok: r.ok, json, resp: r, meta };\r\n}\r\n\r\nexport async function apiHealth() {\r\n  return req('/health', { key: 'health' });\r\n}\r\n\r\nexport async function apiAnalyze(text: string) {\r\n  const { resp, json } = await postJSON('/api/analyze', { text });\r\n  const meta = metaFromResponse({ headers: resp.headers, json, status: resp.status });\r\n  try { applyMetaToBadges(meta); } catch {}\r\n  return { ok: resp.ok, json, resp, meta };\r\n}\r\n\r\nexport async function apiGptDraft(cid: string, clause: string, mode = 'friendly') {\r\n  const { resp, json } = await postJSON('/api/gpt-draft', { cid, clause, mode });\r\n  const meta = metaFromResponse({ headers: resp.headers, json, status: resp.status });\r\n  try { applyMetaToBadges(meta); } catch {}\r\n  return { ok: resp.ok, json, resp, meta };\r\n}\r\n\r\nexport async function apiSummary(cid: string) {\r\n  return req('/api/summary', { method: 'POST', body: { cid }, key: 'summary' });\r\n}\r\n\r\nexport async function apiSummaryGet() {\r\n  return req('/api/summary', { method: 'GET', key: 'summary' });\r\n}\r\n\r\nexport async function apiQaRecheck(text: string, rules: any = {}) {\r\n  const dict = Array.isArray(rules) ? Object.assign({}, ...rules) : (rules || {});\r\n  const { resp, json } = await postJSON('/api/qa-recheck', { text, rules: dict });\r\n  const meta = metaFromResponse({ headers: resp.headers, json, status: resp.status });\r\n  try { applyMetaToBadges(meta); } catch {}\r\n  return { ok: resp.ok, json, resp, meta };\r\n}\r\n\r\nexport async function postRedlines(before_text: string, after_text: string) {\r\n  return postJSON('/api/panel/redlines', { before_text, after_text });\r\n}\r\n", "import { AnalyzeFinding } from \"./api-client\";\r\n\r\nexport function normalizeText(s: string | undefined | null): string {\r\n  if (!s) return \"\";\r\n  return s\r\n    .replace(/\\r\\n/g, \"\\n\")\r\n    .replace(/\\r/g, \"\\n\")\r\n    .replace(/\\u00A0/g, \" \")\r\n    .replace(/[ \\t]+/g, \" \")\r\n    .trim();\r\n}\r\n\r\nexport function severityRank(s?: string): number {\r\n  const m = (s || \"\").toLowerCase();\r\n  return m === \"high\" ? 3 : m === \"medium\" ? 2 : 1;\r\n}\r\n\r\nexport function dedupeFindings(findings: AnalyzeFinding[]): AnalyzeFinding[] {\r\n  const map = new Map<string, AnalyzeFinding>();\r\n  let invalid = 0, dupes = 0;\r\n  for (const f of findings || []) {\r\n    const snippet = normalizeText(f.snippet || \"\");\r\n    const start = typeof f.start === \"number\" ? f.start : undefined;\r\n    const end = typeof f.end === \"number\" ? f.end : (start !== undefined ? start + snippet.length : undefined);\r\n    if (typeof start !== \"number\" || typeof end !== \"number\" || end <= start || end - start > 10000) {\r\n      invalid++;\r\n      continue;\r\n    }\r\n    const key = `${f.rule_id || \"\"}|${start}|${end}|${snippet}`;\r\n    const ex = map.get(key);\r\n    if (!ex || severityRank(f.severity) > severityRank(ex.severity)) {\r\n      map.set(key, { ...f, snippet, start, end });\r\n    } else {\r\n      dupes++;\r\n    }\r\n  }\r\n  const res = Array.from(map.values());\r\n  console.log(\"panel:annotate\", `dedupe dropped ${invalid} invalid, ${dupes} duplicates`);\r\n  return res;\r\n}\r\n", "export function notifyOk(msg: string)   { try { console.log(\"[OK]\", msg); } catch {} }\r\nexport function notifyErr(msg: string)  { try { console.error(\"[ERR]\", msg); } catch {} }\r\nexport function notifyWarn(msg: string) { try { console.warn(\"[WARN]\", msg); } catch {} }\r\n", "export async function getWholeDocText(): Promise<string> {\r\n  return await Word.run(async (ctx) => {\r\n    const body = ctx.document.body;\r\n    body.load(\"text\");\r\n    await ctx.sync();\r\n    return (body.text || \"\").trim();\r\n  });\r\n}\r\n\r\nexport async function getSelectionText(): Promise<string> {\r\n  return await Word.run(async (ctx) => {\r\n    const sel = ctx.document.getSelection();\r\n    sel.load(\"text\");\r\n    await ctx.sync();\r\n    return (sel.text || \"\").trim();\r\n  });\r\n}\r\n", "import { applyMetaToBadges, parseFindings as apiParseFindings, AnalyzeFinding, AnalyzeResponse, postRedlines, postJSON } from \"./api-client\";\r\nimport { normalizeText, dedupeFindings, severityRank } from \"./dedupe\";\r\nexport { normalizeText, dedupeFindings } from \"./dedupe\";\r\nimport {\r\n  getApiKeyFromStore,\r\n  getSchemaFromStore,\r\n  getAddCommentsFlag,\r\n  setAddCommentsFlag,\r\n  setSchemaVersion,\r\n  setApiKey,\r\n} from \"./store\";\r\n\r\ndeclare const Violins: { initAudio: () => void };\r\n\r\n// enable rich debug when OfficeExtension is available\r\nconst oe: any = (globalThis as any).OfficeExtension;\r\nconst gg: any = (globalThis as any);\r\nif (oe && oe.config) {\r\n  const env = gg.__ENV__ ?? (typeof process !== \"undefined\" ? process.env?.NODE_ENV : \"production\");\r\n  const isProd = env === \"production\";\r\n  if (!isProd || gg.__ENABLE_EXTENDED_LOGS__) {\r\n    // @ts-ignore\r\n    oe.config.extendedErrorLogging = true;\r\n  }\r\n}\r\n\r\nexport function logRichError(e: any, tag = \"Word\") {\r\n  try {\r\n    const di = (e && e.debugInfo) || {};\r\n    console.error(`[${tag}] RichApi error`, {\r\n      code: e.code,\r\n      message: e.message,\r\n      errorLocation: di.errorLocation,\r\n      statements: di.statements,\r\n      traceMessages: di.traceMessages,\r\n      inner: di.innerError,\r\n    });\r\n  } catch {}\r\n}\r\n\r\nfunction parseFindings(resp: AnalyzeResponse): AnalyzeFinding[] {\r\n  const arr = apiParseFindings(resp) || [];\r\n  return arr\r\n    .filter(f => f && f.rule_id && f.snippet)\r\n    .map(f => ({ ...f, clause_type: f.clause_type || 'Unknown' }))\r\n    .filter(f => f.clause_type);\r\n}\r\n\r\nconst g: any = globalThis as any;\r\ng.parseFindings = g.parseFindings || parseFindings;\r\ng.applyMetaToBadges = g.applyMetaToBadges || applyMetaToBadges;\r\ng.getApiKeyFromStore = g.getApiKeyFromStore || getApiKeyFromStore;\r\ng.getSchemaFromStore = g.getSchemaFromStore || getSchemaFromStore;\r\ng.logRichError = g.logRichError || logRichError;\r\nimport { notifyOk, notifyErr, notifyWarn } from \"./notifier\";\r\nimport { getWholeDocText } from \"./office\"; // \u0443 \u0432\u0430\u0441 \u0443\u0436\u0435 \u0435\u0441\u0442\u044C \u0445\u0435\u043B\u043F\u0435\u0440; \u0435\u0441\u043B\u0438 \u0438\u043C\u044F \u0438\u043D\u043E\u0435 \u2014 \u043F\u043E\u043F\u0440\u0430\u0432\u044C\u0442\u0435 \u0438\u043C\u043F\u043E\u0440\u0442.\r\ng.getWholeDocText = g.getWholeDocText || getWholeDocText;\r\n\r\ntype Mode = \"live\" | \"friendly\" | \"doctor\";\r\n\r\nconst Q = {\r\n  proposed: 'textarea#proposedText, textarea#draftText, textarea[name=\"proposed\"], textarea[data-role=\"proposed-text\"]',\r\n  original: 'textarea#originalClause, textarea#originalText, textarea[name=\"original\"], textarea[data-role=\"original-clause\"]'\r\n};\r\n\r\nlet lastCid: string = \"\";\r\nlet analyzeBound = false;\r\n\r\nfunction updateStatusChip(schema?: string | null, cid?: string | null) {\r\n  const el = document.getElementById('status-chip');\r\n  if (!el) return;\r\n  const s = (schema ?? getSchemaFromStore()) || '\u2014';\r\n  const c = (cid ?? lastCid) || '\u2014';\r\n  el.textContent = `schema: ${s} | cid: ${c}`;\r\n}\r\n\r\nfunction enableAnalyze() {\r\n  if (analyzeBound) return;\r\n  bindClick(\"#btnAnalyze\", doAnalyze);\r\n  const btn = document.getElementById(\"btnAnalyze\") as HTMLButtonElement | null;\r\n  if (btn) btn.disabled = false;\r\n  analyzeBound = true;\r\n}\r\n\r\nfunction getBackend(): string {\r\n  try {\r\n    return (\r\n      localStorage.getItem('backend.url') ||\r\n      localStorage.getItem('backendUrl') ||\r\n      'https://localhost:9443'\r\n    ).replace(/\\/+$/, '');\r\n  } catch {\r\n    return 'https://localhost:9443';\r\n  }\r\n}\r\n\r\nfunction onSaveBackend() {\r\n  const inp = document.getElementById('backendUrl') as HTMLInputElement | null;\r\n  const val = inp?.value?.trim();\r\n  if (val) {\r\n    try {\r\n      localStorage.setItem('backend.url', val);\r\n      localStorage.setItem('backendUrl', val);\r\n    } catch {}\r\n  }\r\n  location.reload();\r\n}\r\n\r\nfunction ensureHeaders(): boolean {\r\n  try {\r\n    let apiKey = getApiKeyFromStore();\r\n    let schema = getSchemaFromStore();\r\n    const warn = document.getElementById('hdrWarn') as HTMLElement | null;\r\n    const host = (globalThis as any)?.location?.hostname ?? '';\r\n    const isDev = host === 'localhost' || host === '127.0.0.1';\r\n\r\n    if (isDev) {\r\n      if (!apiKey) {\r\n        apiKey = 'local-test-key-123';\r\n        setApiKey(apiKey);\r\n      }\r\n      if (!schema) {\r\n        const envSchema =\r\n          (globalThis as any)?.SCHEMA_VERSION ||\r\n          (typeof process !== 'undefined' && (process as any).env?.SCHEMA_VERSION) ||\r\n          '1.4';\r\n        schema = String(envSchema);\r\n        setSchemaVersion(schema);\r\n      }\r\n    }\r\n\r\n    if (warn) {\r\n      if (!apiKey && !schema && !isDev) {\r\n        warn.style.display = '';\r\n      } else {\r\n        warn.style.display = 'none';\r\n      }\r\n    }\r\n\r\n    if (!apiKey || !schema) {\r\n      console.warn('missing headers', { apiKey: !!apiKey, schema: !!schema });\r\n    }\r\n  } catch {\r\n    // swallow errors \u2013 missing storage should not stop the flow\r\n  }\r\n  return true; // allow all actions regardless of header state\r\n}\r\n\r\nfunction slot(id: string, role: string): HTMLElement | null {\r\n  return (\r\n    document.querySelector(`[data-role=\"${role}\"]`) as HTMLElement | null\r\n  ) || document.getElementById(id);\r\n}\r\n\r\nfunction getRiskThreshold(): \"low\" | \"medium\" | \"high\" {\r\n  const sel = (document.getElementById(\"selectRiskThreshold\") as HTMLSelectElement | null)\r\n    || (document.getElementById(\"riskThreshold\") as HTMLSelectElement | null);\r\n  const v = sel?.value?.toLowerCase();\r\n  return (v === \"low\" || v === \"medium\" || v === \"high\") ? v : \"medium\";\r\n}\r\n\r\nexport function isAddCommentsOnAnalyzeEnabled(): boolean {\r\n  const val = getAddCommentsFlag();\r\n  try {\r\n    const doc: any = (globalThis as any).document;\r\n    const cb = (doc?.getElementById(\"cai-comment-on-analyze\") as HTMLInputElement | null)\r\n      || (doc?.getElementById(\"chkAddCommentsOnAnalyze\") as HTMLInputElement | null);\r\n    if (cb) cb.checked = val;\r\n    return cb ? !!cb.checked : val;\r\n  } catch {\r\n    return val;\r\n  }\r\n}\r\n\r\nexport function setAddCommentsOnAnalyze(val: boolean): void {\r\n  setAddCommentsFlag(val);\r\n}\r\n\r\nfunction isDryRunAnnotateEnabled(): boolean {\r\n  const cb = document.getElementById(\"cai-dry-run-annotate\") as HTMLInputElement | null;\r\n  return cb ? !!cb.checked : false;\r\n}\r\n\r\nfunction filterByThreshold(list: AnalyzeFinding[], thr: \"low\" | \"medium\" | \"high\"): AnalyzeFinding[] {\r\n  const min = severityRank(thr);\r\n  return (list || [])\r\n    .filter(f => f && f.rule_id && f.snippet)\r\n    .map(f => ({ ...f, clause_type: f.clause_type || 'Unknown' }))\r\n    .filter(f => severityRank(f.severity) >= min);\r\n}\r\n\r\nfunction buildLegalComment(f: AnalyzeFinding): string {\r\n  if (!f || !f.rule_id || !f.snippet) {\r\n    console.warn(\"buildLegalComment: missing required fields\", f);\r\n    return \"\";\r\n  }\r\n  const sev = (f.severity || \"info\").toUpperCase();\r\n  const rid = f.rule_id;\r\n  const ct = f.clause_type ? ` (${f.clause_type})` : \"\";\r\n  const advice = f.advice || \"\u2014\";\r\n  const law = Array.isArray(f.law_refs) && f.law_refs.length ? f.law_refs.join('; ') : \"\u2014\";\r\n  const conflict = Array.isArray(f.conflict_with) && f.conflict_with.length ? f.conflict_with.join('; ') : \"\u2014\";\r\n  const fix = f.suggestion?.text || '\u2014';\r\n  const citations = Array.isArray(f.citations) && f.citations.length ? `\\nCitations: ${f.citations.join('; ')}` : '';\r\n  return `[${sev}] ${rid}${ct}\\nReason: ${advice}\\nLaw: ${law}\\nConflict: ${conflict}${citations}\\nSuggested fix: ${fix}`;\r\n}\r\n\r\nfunction nthOccurrenceIndex(hay: string, needle: string, startPos?: number): number {\r\n  if (!needle) return 0;\r\n  let idx = -1, n = 0;\r\n  const bound = typeof startPos === \"number\" ? Math.max(0, startPos) : Number.MAX_SAFE_INTEGER;\r\n  while ((idx = hay.indexOf(needle, idx + 1)) !== -1 && idx < bound) n++;\r\n  return n;\r\n}\r\n\r\nexport function buildParagraphIndex(paragraphs: string[]): { starts: number[]; texts: string[] } {\r\n  const starts: number[] = [];\r\n  const texts: string[] = [];\r\n  let pos = 0;\r\n  for (const p of paragraphs) {\r\n    const t = normalizeText(p);\r\n    starts.push(pos);\r\n    texts.push(t);\r\n    pos += t.length + 1; // assume joined by \\n\r\n  }\r\n  return { starts, texts };\r\n}\r\n\r\nexport async function mapFindingToRange(\r\n  f: AnalyzeFinding,\r\n): Promise<Word.Range | null> {\r\n  const last: string = (window as any).__lastAnalyzed || \"\";\r\n  const base = normalizeText(last);\r\n  const snippet = normalizeText(f.snippet || \"\");\r\n  const occIdx = nthOccurrenceIndex(base, snippet, f.start);\r\n\r\n  try {\r\n    return await Word.run(async ctx => {\r\n      const body = ctx.document.body;\r\n      const searchRes = body.search(snippet, { matchCase: false, matchWholeWord: false });\r\n      searchRes.load(\"items\");\r\n      await ctx.sync();\r\n      const items = searchRes.items || [];\r\n      return items[Math.min(occIdx, Math.max(0, items.length - 1))] || null;\r\n    });\r\n  } catch (e) {\r\n    logRichError(e, \"findings\");\r\n    console.warn(\"mapFindingToRange fail\", e);\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function annotateFindingsIntoWord(findings: AnalyzeFinding[]): Promise<number> {\r\n  const base = normalizeText((window as any).__lastAnalyzed || \"\");\r\n\r\n  // 1) \u0432\u0430\u043B\u0438\u0434\u0438\u0440\u0443\u0435\u043C, \u0447\u0438\u0441\u0442\u0438\u043C \u0438 \u0441\u043E\u0440\u0442\u0438\u0440\u0443\u0435\u043C \u0441 \u0437\u0430\u0449\u0438\u0442\u043E\u0439 \u043E\u0442 overlaps\r\n  const deduped = dedupeFindings(findings || []);\r\n  const sorted = deduped.slice().sort((a, b) => (b.end ?? 0) - (a.end ?? 0));\r\n\r\n  const todo: AnalyzeFinding[] = [];\r\n  let lastStart = Number.POSITIVE_INFINITY;\r\n  let skipped = 0;\r\n  for (const f of sorted) {\r\n    if (!f || !f.rule_id || !f.snippet) { skipped++; continue; }\r\n    const snippet = f.snippet;\r\n    const end = typeof f.end === \"number\" ? f.end : (typeof f.start === \"number\" ? f.start + snippet.length : undefined);\r\n    if (typeof end === \"number\" && end > lastStart) { skipped++; continue; }\r\n    todo.push(f);\r\n    if (typeof f.start === \"number\") lastStart = f.start;\r\n  }\r\n  if (skipped) notifyWarn(`Skipped ${skipped} overlaps/invalid`);\r\n  notifyOk(`Will insert: ${todo.length}`);\r\n\r\n  // 2) \u0433\u043E\u0442\u043E\u0432\u0438\u043C \u044D\u043B\u0435\u043C\u0435\u043D\u0442\u044B + \u0438\u043D\u0434\u0435\u043A\u0441 \u0432\u0445\u043E\u0436\u0434\u0435\u043D\u0438\u044F (\u0447\u0442\u043E\u0431\u044B \u043F\u043E\u043F\u0430\u0434\u0430\u0442\u044C \u0432 \u043D\u0443\u0436\u043D\u044B\u0439 occurrence)\r\n  const items = todo.map(f => {\r\n    const raw = f.snippet || \"\";\r\n    const norm = normalizeText(raw);\r\n    const occIdx = nthOccurrenceIndex(base, norm, f.start);\r\n    return {\r\n      raw,\r\n      norm,\r\n      msg: buildLegalComment(f),\r\n      rule_id: f.rule_id,\r\n      occIdx,\r\n      normalized_fallback: normalizeText((f as any).normalized_snippet || \"\")\r\n    };\r\n  });\r\n\r\n  // 3) \u0421\u0415\u0420\u0418\u0419\u041D\u0410\u042F \u0432\u0441\u0442\u0430\u0432\u043A\u0430: \u043E\u0434\u0438\u043D Word.run \u043D\u0430 \u043E\u0434\u043D\u0443 \u0446\u0435\u043B\u044C (\u0447\u0442\u043E\u0431\u044B \u043D\u0435 \u043B\u043E\u0432\u0438\u0442\u044C InvalidObjectPath)\r\n  const searchOpts = { matchCase: false, matchWholeWord: false } as Word.SearchOptions;\r\n  let inserted = 0;\r\n\r\n\r\n  for (const it of items) {\r\n    await Word.run(async ctx => {\r\n      const body = ctx.document.body;\r\n\r\n      // primary: raw \u0442\u0435\u043A\u0441\u0442\r\n      let target: Word.Range | null = null;\r\n      const sRaw = body.search(it.raw, searchOpts);\r\n      sRaw.load(\"items\");\r\n      await ctx.sync();\r\n\r\n\r\n      const pick = (coll: Word.RangeCollection | undefined | null, occ: number): Word.Range | null => {\r\n        const arr = coll?.items || [];\r\n        if (!arr.length) return null;\r\n        return arr[Math.min(Math.max(occ, 0), arr.length - 1)] || null;\r\n      };\r\n      target = pick(sRaw, it.occIdx);\r\n\r\n      // fallback #1: \u043D\u043E\u0440\u043C\u0430\u043B\u0438\u0437\u043E\u0432\u0430\u043D\u043D\u044B\u0439 \u0442\u0435\u043A\u0441\u0442 \u0438\u0437 finding (\u0435\u0441\u043B\u0438 \u0435\u0441\u0442\u044C \u0438 \u043E\u0442\u043B\u0438\u0447\u0430\u0435\u0442\u0441\u044F)\r\n      if (!target) {\r\n        const fb = it.normalized_fallback && it.normalized_fallback !== it.norm ? it.normalized_fallback : it.norm;\r\n        if (fb && fb.trim()) {\r\n          const sNorm = body.search(fb, searchOpts);\r\n          sNorm.load(\"items\");\r\n          await ctx.sync();\r\n          target = pick(sNorm, it.occIdx);\r\n        }\r\n      }\r\n\r\n      // fallback #2: \u0434\u043B\u0438\u043D\u043D\u044B\u0439 \u0442\u043E\u043A\u0435\u043D (\u0441\u0430\u043C\u043E\u0435 \u0434\u043B\u0438\u043D\u043D\u043E\u0435 \u0441\u043B\u043E\u0432\u043E/\u0444\u0440\u0430\u0437\u0430) \u0438\u0437 raw\r\n      if (!target) {\r\n        const token = (() => {\r\n          const tks = it.raw.replace(/[^\\p{L}\\p{N} ]/gu, \" \").split(\" \").filter(x => x.length >= 12);\r\n          if (tks.length) return tks.sort((a, b) => b.length - a.length)[0].slice(0, 64);\r\n          return null;\r\n        })();\r\n        if (token) {\r\n          const sTok = body.search(token, searchOpts);\r\n          sTok.load(\"items\");\r\n          await ctx.sync();\r\n          target = pick(sTok, 0);\r\n        }\r\n      }\r\n\r\n      // \u0432\u0441\u0442\u0430\u0432\u043A\u0430 / dry-run select\r\n      if (target) {\r\n        if (isDryRunAnnotateEnabled()) {\r\n          try { target.select(); } catch {}\r\n        } else if (it.msg) {\r\n          target.insertComment(it.msg);\r\n        }\r\n        inserted++;\r\n      } else {\r\n        console.warn(\"[annotate] no match for snippet\", { rid: it.rule_id, snippet: it.raw.slice(0, 120) });\r\n      }\r\n\r\n      await ctx.sync();\r\n    }).catch(e => {\r\n      logRichError(e, \"annotate\");\r\n      console.warn(\"annotate run fail\", e?.code, e?.message, e?.debugInfo);\r\n    });\r\n  }\r\n\r\n  console.log(\"panel:annotate\", {\r\n    total: findings.length,\r\n    deduped: deduped.length,\r\n    skipped_overlaps: skipped,\r\n    will_annotate: todo.length,\r\n    inserted\r\n  });\r\n\r\n  return inserted;\r\n}\r\n\r\n\r\ng.annotateFindingsIntoWord = g.annotateFindingsIntoWord || annotateFindingsIntoWord;\r\n\r\nasync function onClearAnnots() {\r\n  try {\r\n    await Word.run(async ctx => {\r\n      const body = ctx.document.body;\r\n      const cmts = ctx.document.comments;\r\n      cmts.load('items');\r\n      await ctx.sync();\r\n      for (const c of cmts.items) {\r\n        try { c.delete(); } catch {}\r\n      }\r\n      try { body.font.highlightColor = \"NoColor\" as any; } catch {}\r\n      await ctx.sync();\r\n    });\r\n    notifyOk('Annotations cleared');\r\n  } catch (e) {\r\n    logRichError(e, 'annotate');\r\n    notifyWarn('Failed to clear annotations');\r\n  }\r\n}\r\n\r\nexport async function applyOpsTracked(\r\n  ops: { start: number; end: number; replacement: string; context_before?: string; context_after?: string; rationale?: string; source?: string }[]\r\n) {\r\n  let cleaned = (ops || [])\r\n    .filter(o => typeof o.start === \"number\" && typeof o.end === \"number\" && o.end > o.start)\r\n    .sort((a, b) => a.start - b.start);\r\n\r\n  // prune overlaps keeping earlier ops\r\n  let lastEnd = -1;\r\n  cleaned = cleaned.filter(o => {\r\n    if (o.start < lastEnd) return false;\r\n    lastEnd = o.end;\r\n    return true;\r\n    });\r\n\r\n  if (!cleaned.length) return;\r\n  const last: string = (window as any).__lastAnalyzed || \"\";\r\n\r\n  await Word.run(async ctx => {\r\n    const body = ctx.document.body;\r\n    (ctx.document as any).trackRevisions = true;\r\n    const searchOpts = { matchCase: false, matchWholeWord: false } as Word.SearchOptions;\r\n\r\n    const pick = (coll: Word.RangeCollection | undefined | null, occ: number): Word.Range | null => {\r\n      const arr = coll?.items || [];\r\n      if (!arr.length) return null;\r\n      return arr[Math.min(Math.max(occ, 0), arr.length - 1)] || null;\r\n    };\r\n\r\n    for (const op of cleaned) {\r\n      const snippet = last.slice(op.start, op.end);\r\n      const occIdx = (() => {\r\n        let idx = -1, n = 0;\r\n        while ((idx = last.indexOf(snippet, idx + 1)) !== -1 && idx < op.start) n++;\r\n        return n;\r\n      })();\r\n\r\n      let target: Word.Range | null = null;\r\n\r\n      if (op.context_before || op.context_after) {\r\n        const searchText = `${op.context_before || ''}${snippet}${op.context_after || ''}`;\r\n        const sFull = body.search(searchText, searchOpts);\r\n        sFull.load('items');\r\n        await ctx.sync();\r\n        const fullRange = pick(sFull, occIdx);\r\n        if (fullRange) {\r\n          const inner = fullRange.search(snippet, searchOpts);\r\n          inner.load('items');\r\n          await ctx.sync();\r\n          target = pick(inner, 0);\r\n        }\r\n      }\r\n\r\n      if (!target) {\r\n        const found = body.search(snippet, searchOpts);\r\n        found.load('items');\r\n        await ctx.sync();\r\n        target = pick(found, occIdx);\r\n      }\r\n\r\n      if (!target) {\r\n        const token = (() => {\r\n          const tks = snippet.replace(/[^\\p{L}\\p{N} ]/gu, ' ').split(' ').filter(x => x.length >= 12);\r\n          if (tks.length) return tks.sort((a, b) => b.length - a.length)[0].slice(0, 64);\r\n          return null;\r\n        })();\r\n        if (token) {\r\n          const sTok = body.search(token, searchOpts);\r\n          sTok.load('items');\r\n          await ctx.sync();\r\n          target = pick(sTok, 0);\r\n        }\r\n      }\r\n\r\n      if (target) {\r\n\r\n        target.insertText(op.replacement, 'Replace');\r\n        const comment = op.rationale || op.source || 'AI edit';\r\n        try { target.insertComment(comment); } catch {}\r\n      } else {\r\n        console.warn('[applyOpsTracked] match not found', { snippet, occIdx });\r\n      }\r\n      await ctx.sync();\r\n    }\r\n  });\r\n}\r\n\r\ng.applyOpsTracked = g.applyOpsTracked || applyOpsTracked;\r\n\r\n\r\n\r\nasync function highlightFinding(f: AnalyzeFinding) {\r\n  const base = normalizeText((window as any).__lastAnalyzed || \"\");\r\n  const raw = f?.snippet || \"\";\r\n  const norm = normalizeText(raw);\r\n  const occIdx = nthOccurrenceIndex(base, norm, f.start);\r\n  const searchOpts = { matchCase: false, matchWholeWord: false } as Word.SearchOptions;\r\n\r\n  await Word.run(async ctx => {\r\n    const body = ctx.document.body;\r\n    let target: Word.Range | null = null;\r\n    const pick = (coll: Word.RangeCollection | undefined | null, occ: number): Word.Range | null => {\r\n      const arr = coll?.items || [];\r\n      if (!arr.length) return null;\r\n      return arr[Math.min(Math.max(occ, 0), arr.length - 1)] || null;\r\n    };\r\n\r\n    const sRaw = body.search(raw, searchOpts);\r\n    sRaw.load(\"items\");\r\n    await ctx.sync();\r\n    target = pick(sRaw, occIdx);\r\n\r\n    if (!target) {\r\n      const fb = (f as any).normalized_snippet && (f as any).normalized_snippet !== norm ? (f as any).normalized_snippet : norm;\r\n      if (fb && fb.trim()) {\r\n        const sNorm = body.search(fb, searchOpts);\r\n        sNorm.load(\"items\");\r\n        await ctx.sync();\r\n        target = pick(sNorm, occIdx);\r\n      }\r\n    }\r\n\r\n    if (!target) {\r\n      const token = (() => {\r\n        const tks = raw.replace(/[^\\p{L}\\p{N} ]/gu, \" \").split(\" \").filter(x => x.length >= 12);\r\n        if (tks.length) return tks.sort((a, b) => b.length - a.length)[0].slice(0, 64);\r\n        return null;\r\n      })();\r\n      if (token) {\r\n        const sTok = body.search(token, searchOpts);\r\n        sTok.load(\"items\");\r\n        await ctx.sync();\r\n        target = pick(sTok, 0);\r\n      }\r\n    }\r\n\r\n    if (target) {\r\n      try { target.select(); } catch {}\r\n    }\r\n    await ctx.sync();\r\n  });\r\n}\r\n\r\nasync function navigateFinding(dir: number) {\r\n  const arr: AnalyzeFinding[] = (window as any).__findings || [];\r\n  if (!arr.length) return;\r\n  const w: any = window as any;\r\n  w.__findingIdx = (w.__findingIdx ?? 0) + dir;\r\n  if (w.__findingIdx < 0) w.__findingIdx = arr.length - 1;\r\n  if (w.__findingIdx >= arr.length) w.__findingIdx = 0;\r\n  const list = document.getElementById(\"findingsList\");\r\n  if (list) {\r\n    const items = Array.from(list.querySelectorAll(\"li\"));\r\n    items.forEach((li, i) => {\r\n      (li as HTMLElement).classList.toggle(\"active\", i === w.__findingIdx);\r\n    });\r\n    const act = items[w.__findingIdx] as HTMLElement | undefined;\r\n    if (act) act.scrollIntoView({ block: \"nearest\" });\r\n  }\r\n  try { await highlightFinding(arr[w.__findingIdx]); } catch {}\r\n}\r\n\r\nfunction onPrevIssue() { navigateFinding(-1); }\r\nfunction onNextIssue() { navigateFinding(1); }\r\n\r\nexport function renderAnalysisSummary(json: any) {\r\n  // \u0430\u043A\u043A\u0443\u0440\u0430\u0442\u043D\u043E \u0432\u044B\u0442\u0430\u0441\u043A\u0438\u0432\u0430\u0435\u043C \u043A\u043B\u044E\u0447\u0435\u0432\u044B\u0435 \u043F\u043E\u043B\u044F\r\n  const clauseType =\r\n    json?.summary?.clause_type ||\r\n    json?.meta?.clause_type ||\r\n    json?.doc_type ||\r\n    \"\u2014\";\r\n\r\n  const findings = Array.isArray(json?.findings) ? json.findings : [];\r\n  const recs = Array.isArray(json?.recommendations) ? json.recommendations : [];\r\n\r\n  const thr = getRiskThreshold();\r\n  const visibleFindings = filterByThreshold(findings, thr);\r\n  const visible = visibleFindings.length;\r\n  const hidden = findings.length - visible;\r\n\r\n  const setText = (id: string, val: string) => {\r\n    const el = document.getElementById(id);\r\n    if (el) el.textContent = val;\r\n  };\r\n\r\n  setText(\"clauseTypeOut\", String(clauseType));\r\n  setText(\"resFindingsCount\", String(findings.length));\r\n  setText(\"visibleHiddenOut\", `${visible} / ${hidden}`);\r\n\r\n  // \u0417\u0430\u043F\u043E\u043B\u043D\u044F\u0435\u043C findings\r\n  const fCont = document.getElementById(\"findingsList\");\r\n  if (fCont) {\r\n    fCont.innerHTML = \"\";\r\n    for (const f of findings) {\r\n      const li = document.createElement(\"li\");\r\n      const title =\r\n        f?.title || f?.finding?.title || f?.rule_id || \"Issue\";\r\n      const snippet = f?.snippet || f?.evidence?.text || \"\";\r\n      li.textContent = snippet ? `${title}: ${snippet}` : String(title);\r\n      fCont.appendChild(li);\r\n    }\r\n  }\r\n\r\n  // \u0417\u0430\u043F\u043E\u043B\u043D\u044F\u0435\u043C \u0440\u0435\u043A\u043E\u043C\u0435\u043D\u0434\u0430\u0446\u0438\u0438\r\n  const rCont = document.getElementById(\"recsList\");\r\n  if (rCont) {\r\n    rCont.innerHTML = \"\";\r\n    for (const r of recs) {\r\n      const li = document.createElement(\"li\");\r\n      li.textContent = r?.text || r?.advice || r?.message || \"Recommendation\";\r\n      rCont.appendChild(li);\r\n    }\r\n  }\r\n\r\n  // \u041F\u043E\u043A\u0430\u0437\u0430\u0442\u044C \u0431\u043B\u043E\u043A \u0440\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442\u043E\u0432 (\u0435\u0441\u043B\u0438 \u0431\u044B\u043B \u0441\u043A\u0440\u044B\u0442 \u0441\u0442\u0438\u043B\u044F\u043C\u0438)\r\n  const rb = document.getElementById(\"resultsBlock\") as HTMLElement | null;\r\n  if (rb) rb.style.removeProperty(\"display\");\r\n}\r\n\r\nfunction renderResults(res: any) {\r\n  const clause = slot(\"resClauseType\", \"clause-type\");\r\n  if (clause) clause.textContent = res?.clause_type || \"\u2014\";\r\n\r\n  const findingsArr: AnalyzeFinding[] = parseFindings(res);\r\n  (window as any).__findings = findingsArr;\r\n  (window as any).__findingIdx = 0;\r\n  const findingsList = slot(\"findingsList\", \"findings\") as HTMLElement | null;\r\n  if (findingsList) {\r\n    findingsList.innerHTML = \"\";\r\n    findingsArr.forEach((f: any) => {\r\n      const li = document.createElement(\"li\");\r\n      li.textContent = typeof f === \"string\" ? f : JSON.stringify(f);\r\n      findingsList.appendChild(li);\r\n    });\r\n  }\r\n\r\n  const recoArr = Array.isArray(res?.recommendations) ? res.recommendations : [];\r\n  const recoList = slot(\"recoList\", \"recommendations\") as HTMLElement | null;\r\n  if (recoList) {\r\n    recoList.innerHTML = \"\";\r\n    recoArr.forEach((r: any) => {\r\n      const li = document.createElement(\"li\");\r\n      li.textContent = typeof r === \"string\" ? r : JSON.stringify(r);\r\n      recoList.appendChild(li);\r\n    });\r\n  }\r\n\r\n  const count = slot(\"resFindingsCount\", \"findings-count\");\r\n  if (count) count.textContent = String(findingsArr.length);\r\n\r\n  const pre = slot(\"rawJson\", \"raw-json\") as HTMLElement | null;\r\n  if (pre) pre.textContent = JSON.stringify(res ?? {}, null, 2);\r\n}\r\n\r\nfunction wireResultsToggle() {\r\n  const toggle = slot(\"toggleRaw\", \"toggle-raw-json\");\r\n  const pre = slot(\"rawJson\", \"raw-json\") as HTMLElement | null;\r\n  if (toggle && pre) {\r\n    pre.style.display = \"none\";\r\n    toggle.addEventListener(\"click\", () => {\r\n      pre.style.display = pre.style.display === \"none\" ? \"block\" : \"none\";\r\n    });\r\n  }\r\n}\r\n\r\nfunction setConnBadge(ok: boolean | null) {\r\n  const el = document.getElementById(\"connBadge\");\r\n  if (el) el.textContent = `Conn: ${ok === null ? \"\u2014\" : ok ? \"\u2713\" : \"\u00D7\"}`;\r\n}\r\n\r\nfunction setOfficeBadge(txt: string | null) {\r\n  const el = document.getElementById(\"officeBadge\");\r\n  if (el) el.textContent = `Office: ${txt ?? \"\u2014\"}`;\r\n}\r\n\r\nfunction $(sel: string): HTMLTextAreaElement | null {\r\n  return document.querySelector(sel) as HTMLTextAreaElement | null;\r\n}\r\n\r\nfunction getSelectionAsync(): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    try {\r\n      Office.context.document.getSelectedDataAsync(Office.CoercionType.Text, r => {\r\n        if (r.status === Office.AsyncResultStatus.Succeeded) {\r\n          resolve((r.value || \"\").toString().trim());\r\n        } else {\r\n          reject(r.error);\r\n        }\r\n      });\r\n    } catch (e) { reject(e); }\r\n  });\r\n}\r\n\r\nasync function getSelectionContext(chars = 200): Promise<{ before: string; after: string; }> {\r\n  try {\r\n    return await Word.run(async ctx => {\r\n      const sel = ctx.document.getSelection();\r\n      const body = ctx.document.body;\r\n      sel.load(\"text\");\r\n      body.load(\"text\");\r\n      await ctx.sync();\r\n      const full = body.text || \"\";\r\n      const s = sel.text || \"\";\r\n      const idx = full.indexOf(s);\r\n      if (idx === -1) return { before: \"\", after: \"\" };\r\n      return {\r\n        before: full.slice(Math.max(0, idx - chars), idx),\r\n        after: full.slice(idx + s.length, idx + s.length + chars)\r\n      };\r\n    });\r\n  } catch (e) {\r\n    logRichError(e, \"findings\");\r\n    console.warn(\"context fail\", e);\r\n    return { before: \"\", after: \"\" };\r\n  }\r\n}\r\n\r\n\r\nasync function onUseWholeDoc() {\r\n  const src = $(Q.original);\r\n  const raw = await getWholeDocText();\r\n  const text = normalizeText(raw || \"\");\r\n  if (src) {\r\n    src.value = text;\r\n    src.dispatchEvent(new Event(\"input\", { bubbles: true }));\r\n  }\r\n  (window as any).__lastAnalyzed = text;\r\n  (window as any).toast?.(\"Whole doc loaded\");\r\n}\r\n\r\nasync function onSuggestEdit(ev?: Event) {\r\n  try {\r\n    const dst = $(Q.proposed);\r\n    const base = (window as any).__lastAnalyzed || normalizeText(await getWholeDocText());\r\n    if (!base) { notifyWarn(\"No document text\"); return; }\r\n    const arr: AnalyzeFinding[] = (window as any).__findings || [];\r\n    const idx = (window as any).__findingIdx ?? 0;\r\n    const finding = arr[idx];\r\n    if (!finding) { notifyWarn(\"No active finding\"); return; }\r\n    const clause = finding.snippet || '';\r\n    const { json } = await postJSON('/api/gpt-draft', { cid: lastCid, clause, mode: 'friendly' });\r\n    const proposed = (json?.proposed_text ?? json?.text ?? \"\").toString();\r\n    const w: any = window as any;\r\n    w.__last = w.__last || {};\r\n    w.__last['gpt-draft'] = { json };\r\n    if (dst) {\r\n      if (!dst.id) dst.id = \"draftText\";\r\n      if (!dst.name) dst.name = \"proposed\";\r\n      (dst as any).dataset.role = \"proposed-text\";\r\n      dst.value = proposed;\r\n      dst.dispatchEvent(new Event(\"input\", { bubbles: true }));\r\n      notifyOk(\"Draft ready\");\r\n      onDraftReady(proposed);\r\n    } else {\r\n      notifyWarn(\"Proposed textarea not found\");\r\n      onDraftReady('');\r\n    }\r\n  } catch (e) {\r\n    notifyWarn(\"Draft error\");\r\n    console.error(e);\r\n    onDraftReady('');\r\n  }\r\n}\r\n\r\nasync function doHealth() {\r\n  try {\r\n    const prev = getSchemaFromStore();\r\n    const resp = await fetch(`${getBackend()}/health`, { method: 'GET' });\r\n    const json: any = await resp.json().catch(() => ({}));\r\n    const schema = resp.headers.get('x-schema-version') || json?.schema || null;\r\n    if (schema) {\r\n      setSchemaVersion(schema);\r\n      if (schema !== prev) {\r\n        console.log(`schema: ${schema} (synced)`);\r\n      }\r\n    }\r\n    setConnBadge(true);\r\n    enableAnalyze();\r\n    updateStatusChip(schema, null);\r\n    try {\r\n      applyMetaToBadges({\r\n        cid: null,\r\n        xcache: null,\r\n        latencyMs: null,\r\n        schema: schema || null,\r\n        provider: json?.provider || null,\r\n        model: json?.model || null,\r\n        llm_mode: null,\r\n        usage: null,\r\n        status: json?.status || null,\r\n      });\r\n    } catch {}\r\n    notifyOk(`Health: ${json?.status || 'ok'}${schema ? ` (schema ${schema})` : ''}`);\r\n  } catch (e) {\r\n    setConnBadge(false);\r\n    notifyWarn('Health failed');\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nasync function doAnalyze() {\r\n  const btn = document.getElementById(\"btnAnalyze\") as HTMLButtonElement | null;\r\n  const busy = document.getElementById(\"busyBar\") as HTMLElement | null;\r\n  if (btn) btn.disabled = true;\r\n  if (busy) busy.style.display = \"\";\r\n  try {\r\n    onDraftReady('');\r\n    const cached = (window as any).__lastAnalyzed as string | undefined;\r\n    const base = cached && cached.trim() ? cached : normalizeText(await (globalThis as any).getWholeDocText());\r\n    if (!base) { notifyErr(\"\u0412 \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u0435 \u043D\u0435\u0442 \u0442\u0435\u043A\u0441\u0442\u0430\"); return; }\r\n\r\n    ensureHeaders();\r\n\r\n    (window as any).__lastAnalyzed = base;\r\n    const orig = document.getElementById(\"originalText\") as HTMLTextAreaElement | null;\r\n    if (orig) orig.value = base;\r\n\r\n    const { resp, json } = await postJSON('/api/analyze', { text: base });\r\n    if (!resp.ok) throw new Error(`HTTP ${resp.status}`);\r\n    const respSchema = resp.headers.get('x-schema-version');\r\n    if (respSchema) setSchemaVersion(respSchema);\r\n    if (json?.schema) setSchemaVersion(json.schema);\r\n    lastCid = resp.headers.get('x-cid') || '';\r\n    updateStatusChip(null, lastCid);\r\n    renderResults(json);\r\n    renderAnalysisSummary(json);\r\n\r\n    try { localStorage.setItem('last_analysis_json', JSON.stringify(json)); } catch {}\r\n\r\n    try {\r\n      const all = (globalThis as any).parseFindings(json);\r\n      const thr = getRiskThreshold();\r\n      const filtered = filterByThreshold(all, thr);\r\n      if (isAddCommentsOnAnalyzeEnabled() && filtered.length) {\r\n        await (globalThis as any).annotateFindingsIntoWord(filtered);\r\n      }\r\n    } catch (e) {\r\n      console.warn(\"auto-annotate after analyze failed\", e);\r\n    }\r\n\r\n    (document.getElementById(\"results\") || document.body)\r\n      .dispatchEvent(new CustomEvent(\"ca.results\", { detail: json }));\r\n\r\n    notifyOk(\"Analyze OK\");\r\n  } catch (e) {\r\n    notifyWarn(\"Analyze failed\");\r\n    console.error(e);\r\n  } finally {\r\n    if (btn) btn.disabled = false;\r\n    if (busy) busy.style.display = \"none\";\r\n  }\r\n}\r\n\r\nasync function doQARecheck() {\r\n  ensureHeaders();\r\n  const text = await getWholeDocText();\r\n  const { json } = await postJSON('/api/qa-recheck', { text, rules: {} });\r\n  (document.getElementById(\"results\") || document.body).dispatchEvent(new CustomEvent(\"ca.qa\", { detail: json }));\r\n  const ok = !json?.error;\r\n  if (ok) {\r\n    notifyOk(\"QA recheck OK\");\r\n  } else {\r\n    const msg = json?.error || json?.message || 'unknown';\r\n    notifyErr(`QA recheck failed: ${msg}`);\r\n  }\r\n}\r\n\r\nfunction bindClick(sel: string, fn: () => void) {\r\n  const el = document.querySelector(sel) as HTMLButtonElement | null;\r\n  if (!el) return;\r\n  el.addEventListener(\"click\", (e) => { e.preventDefault(); fn(); });\r\n  el.classList.remove(\"js-disable-while-busy\");\r\n  el.removeAttribute(\"disabled\");\r\n}\r\n\r\nasync function onPreviewDiff() {\r\n  try {\r\n    const before = (window as any).__lastAnalyzed || '';\r\n    const after = ($(Q.proposed)?.value || '').trim();\r\n    if (!after) { notifyWarn('No draft to diff'); return; }\r\n    const diff: any = await postRedlines(before, after);\r\n    const html = diff?.json?.html || diff?.json?.diff_html || diff?.json?.redlines || '';\r\n    const out = document.getElementById('diffOutput') as HTMLElement | null;\r\n    const cont = document.getElementById('diffContainer') as HTMLElement | null;\r\n    if (out && cont) {\r\n      out.innerHTML = html || '';\r\n      cont.style.display = html ? 'block' : 'none';\r\n    }\r\n  } catch (e) {\r\n    notifyWarn('Diff failed');\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nasync function onApplyTracked() {\r\n  try {\r\n    const last = (window as any).__last || {};\r\n    const ops = last[\"gpt-draft\"]?.json?.ops || last[\"suggest\"]?.json?.ops || [];\r\n    if (!ops.length) { notifyWarn(\"No ops to apply\"); return; }\r\n    await applyOpsTracked(ops);\r\n    notifyOk(\"Applied ops\");\r\n  } catch (e) {\r\n    notifyWarn(\"Insert failed\");\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nasync function onAcceptAll() {\r\n  try {\r\n    const dst = $(Q.proposed);\r\n    const proposed = (dst?.value || \"\").trim();\r\n    if (!proposed) { (window as any).toast?.(\"Nothing to accept\"); return; }\r\n\r\n    const cid = (document.getElementById(\"cid\")?.textContent || \"\").trim();\r\n    const base = (() => {\r\n      try { return (localStorage.getItem(\"backendUrl\") || \"https://localhost:9443\").replace(/\\/+$/, \"\"); }\r\n      catch { return \"https://localhost:9443\"; }\r\n    })();\r\n    const link = cid && cid !== \"\u2014\" ? `${base}/api/trace/${cid}` : \"AI draft\";\r\n\r\n    await Word.run(async ctx => {\r\n      const range = ctx.document.getSelection();\r\n      (ctx.document as any).trackRevisions = true;\r\n      range.insertText(proposed, Word.InsertLocation.replace);\r\n      try { range.insertComment(link); } catch {}\r\n      await ctx.sync();\r\n    });\r\n\r\n    (window as any).toast?.(\"Accepted into Word\");\r\n    console.log(\"[OK] Accepted into Word\");\r\n  } catch (e) {\r\n    (window as any).toast?.(\"Accept failed\");\r\n    logRichError(e, \"insertDraft\");\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nasync function onRejectAll() {\r\n  try {\r\n    const dst = $(Q.proposed);\r\n    if (dst) {\r\n      dst.value = \"\";\r\n      dst.dispatchEvent(new Event(\"input\", { bubbles: true }));\r\n      onDraftReady('');\r\n    }\r\n    await Word.run(async ctx => {\r\n      const range = ctx.document.getSelection();\r\n      const revs = range.revisions;\r\n      revs.load(\"items\");\r\n      await ctx.sync();\r\n      (revs.items || []).forEach(r => { try { r.reject(); } catch {} });\r\n      await ctx.sync();\r\n    });\r\n    (window as any).toast?.(\"Rejected\");\r\n    console.log(\"[OK] Rejected\");\r\n  } catch (e) {\r\n    (window as any).toast?.(\"Reject failed\");\r\n    logRichError(e, \"insertDraft\");\r\n    console.error(e);\r\n  }\r\n}\r\n\r\nfunction wireUI() {\r\n  bindClick(\"#btnUseWholeDoc\", onUseWholeDoc);\r\n  bindClick(\"#btnTest\", doHealth);\r\n  bindClick(\"#btnQARecheck\", doQARecheck);\r\n  document.getElementById(\"btnSuggestEdit\")?.addEventListener(\"click\", onSuggestEdit);\r\n  bindClick(\"#btnApplyTracked\", onApplyTracked);\r\n  bindClick(\"#btnAcceptAll\", onAcceptAll);\r\n  bindClick(\"#btnRejectAll\", onRejectAll);\r\n  bindClick(\"#btnPrevIssue\", onPrevIssue);\r\n  bindClick(\"#btnNextIssue\", onNextIssue);\r\n  bindClick(\"#btnPreviewDiff\", onPreviewDiff);\r\n  bindClick(\"#btnClearAnnots\", onClearAnnots);\r\n  bindClick(\"#btnSave\", onSaveBackend);\r\n  const cb = (document.getElementById(\"cai-comment-on-analyze\") as HTMLInputElement | null)\r\n    || (document.getElementById(\"chkAddCommentsOnAnalyze\") as HTMLInputElement | null);\r\n  if (cb) {\r\n    cb.checked = isAddCommentsOnAnalyzeEnabled();\r\n    cb.addEventListener(\"change\", () => setAddCommentsOnAnalyze(!!cb.checked));\r\n  } else {\r\n    isAddCommentsOnAnalyzeEnabled();\r\n  }\r\n  const annotateBtn = document.getElementById(\"btnAnnotate\") as HTMLButtonElement | null;\r\n  if (annotateBtn) {\r\n    annotateBtn.addEventListener(\"click\", async () => {\r\n      if (annotateBtn.disabled) return;\r\n      annotateBtn.disabled = true;\r\n      try {\r\n        const data = (window as any).__last?.analyze?.json || {};\r\n        const findings = (globalThis as any).parseFindings(data);\r\n        await (globalThis as any).annotateFindingsIntoWord(findings);\r\n      } finally {\r\n        annotateBtn.disabled = false;\r\n      }\r\n    });\r\n    annotateBtn.classList.remove(\"js-disable-while-busy\");\r\n    annotateBtn.removeAttribute(\"disabled\");\r\n  }\r\n\r\n  onDraftReady('');\r\n  wireResultsToggle();\r\n  console.log(\"Panel UI wired\");\r\n  const ab = document.getElementById(\"btnAnalyze\") as HTMLButtonElement | null;\r\n  if (ab) ab.disabled = true;\r\n  ensureHeaders();\r\n  updateStatusChip();\r\n}\r\n\r\ng.wireUI = g.wireUI || wireUI;\r\n\r\nfunction onDraftReady(text: string) {\r\n  const show = !!text.trim();\r\n  const apply = document.getElementById('btnApplyTracked') as HTMLButtonElement | null;\r\n  const accept = document.getElementById('btnAcceptAll') as HTMLButtonElement | null;\r\n  const reject = document.getElementById('btnRejectAll') as HTMLButtonElement | null;\r\n  const diff = document.getElementById('btnPreviewDiff') as HTMLButtonElement | null;\r\n  const pane = document.getElementById('draftPane') as HTMLElement | null;\r\n  const dst = document.getElementById('draftText') as HTMLTextAreaElement | null;\r\n  if (dst) dst.value = text;\r\n  if (pane) pane.style.display = show ? '' : 'none';\r\n  if (apply) apply.disabled = !show;\r\n  if (accept) accept.disabled = !show;\r\n  if (reject) reject.disabled = !show;\r\n  if (diff) diff.disabled = !show;\r\n}\r\n\r\nasync function bootstrap(info?: Office.OfficeInfo) {\r\n  wireUI();\r\n  try { await doHealth(); } catch {}\r\n  try {\r\n    setOfficeBadge(`${info?.host || Office.context?.host || \"Word\"} \u2713`);\r\n  } catch {\r\n    setOfficeBadge(null);\r\n  }\r\n}\r\n\r\nif (!(globalThis as any).__CAI_TESTING__) {\r\n  document.addEventListener(\"DOMContentLoaded\", () => {\r\n    Violins.initAudio();\r\n    Office.onReady(info => bootstrap(info));\r\n  });\r\n}\r\n"],
  "mappings": "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",
  "names": ["_a", "parseFindings", "_a", "base", "_a", "base"]
}
